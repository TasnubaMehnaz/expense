drop database expenseTracker_DB;
drop user expenseTracker;
create user expenseTracker with password 'password';
create user expenseTracker_DB with template=template0 owner=expenseTracker;
\connect expenseTracker_DB;
alter default privileges grant all on tables to expenseTracker;
alter default privileges grant all on sequences to expenseTracker;

-- Create table
create table ET_USERS
(
  user_id   NUMBER generated by default on null as identity,
  firstname VARCHAR2(255),
  lastname  VARCHAR2(255),
  email     VARCHAR2(255),
  password  VARCHAR2(255),
  roles     VARCHAR2(255)
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints 
alter table ET_USERS
  add primary key (USER_ID)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- Create table
create table ET_CATEGORIES
(
  category_id NUMBER generated by default on null as identity,
  user_id     INTEGER not null,
  title       VARCHAR2(28) not null,
  description VARCHAR2(50) not null
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints 
alter table ET_CATEGORIES
  add constraint PK_CATEGORY_ID primary key (CATEGORY_ID)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table ET_CATEGORIES
  add constraint CAT_USERS_FK foreign key (USER_ID)
  references ET_USERS (USER_ID);


-- Create table
create table ET_TRANSACTIONS
(
  transaction_id   NUMBER generated by default on null as identity,
  category_id      INTEGER not null,
  user_id          INTEGER not null,
  amount           NUMBER(10,2) not null,
  note             VARCHAR2(50) not null,
  transaction_date LONG not null
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints 
alter table ET_TRANSACTIONS
  add constraint PK_TRANSACTION_ID primary key (TRANSACTION_ID)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table ET_TRANSACTIONS
  add constraint TRANS_CAT_FK foreign key (CATEGORY_ID)
  references ET_CATEGORIES (CATEGORY_ID);
alter table ET_TRANSACTIONS
  add constraint TRANS_USER_FK foreign key (USER_ID)
  references ET_USERS (USER_ID);


-- Create table
create table ET_PAYMENT
(
  payment_id     INTEGER generated by default on null as identity,
  transaction_id INTEGER not null,
  merchant_id    VARCHAR2(50) not null,
  date_time      VARCHAR2(50) not null,
  order_id       VARCHAR2(50) not null,
  payment_ref_id VARCHAR2(100) not null,
  status         VARCHAR2(28)
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints 
alter table ET_PAYMENT
  add constraint PK_PAYMENT_ID primary key (PAYMENT_ID)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table ET_PAYMENT
  add constraint PAY_TRANS_FK foreign key (TRANSACTION_ID)
  references ET_TRANSACTIONS (TRANSACTION_ID);
